version: '3'

networks:
  devhub:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "8090:80"
    volumes:
      - ./:/var/www:cached
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/data/logs/nginx:/var/log/nginx/
    depends_on:
      - php
      - mysql
    networks:
      - devhub

  mysql:
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - '${FORWARD_DB_PORT:-4306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE:-devhub}'
      MYSQL_USER: '${DB_USERNAME:-root}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - ./storage/mysql:/var/lib/mysql
      - './.docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf'
    networks:
      - devhub

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    tty: true
    ports:
      - '1025:1025'
      - '8025:8025'
    #this is optional
    #restart: always
    restart: on-failure
    networks:
      - devhub

  php:
    command: ["./.docker/wait-for-it.sh", "mysql:3306", "--", "echo", "'mysql is up'"]
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - './:/var/www'
    ports:
      - "9000:9000"
    networks:
      - devhub

  registry:
    image: registry:2
    ports:
    - "5000:5000"
    volumes:
    - registry:/var/lib/registry

volumes:
  registry:
